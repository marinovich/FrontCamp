{"version":3,"sources":["webpack:///./src/NewsData.ts","webpack:///./src/constants.ts","webpack:///./src/images/default-news.png","webpack:///./src/init.ts","webpack:///./src/request.ts","webpack:///./src/services/index.ts","webpack:///./src/services/newsApi.ts","webpack:///./src/services/renderDiffSection.ts","webpack:///./src/services/renderList.ts","webpack:///./src/utils/flattenChildNodes.ts","webpack:///./src/utils/generateLogoUrl.ts","webpack:///./src/utils/generateUniqueId.ts","webpack:///./src/utils/getElementId.ts","webpack:///./src/utils/getSourceItemElement.ts","webpack:///./src/utils/index.ts"],"names":[],"mappings":"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","file":"init.chunk.js","sourcesContent":["import * as _ from 'lodash';\n\nimport * as Models from 'models';\n\nexport class NewsData {\n  public getItemElement: Function;\n  public getTopArticlesListAsync: Function;\n  public toggleItemSelection: Function;\n  private currentSelectedSource: HTMLElement;\n  private sourcesMap: Map<string, Models.ISource>;\n  private topArticles: Map<string, Models.IArticle[]>;\n\n  constructor(\n    toggleElement,\n    getItemElement,\n    getTopArticlesListAsync,\n  ) {\n    this.sourcesMap = new Map<string, Models.ISource>();\n    this.topArticles = new Map<string, Models.IArticle[]>();\n\n    this.currentSelectedSource = null;\n    // toggle element selection\n    this.toggleItemSelection = toggleElement;\n    // checks whether selected source item is 'li' element, otherwise finds it\n    this.getItemElement = getItemElement;\n    // TODO: add comment\n    this.getTopArticlesListAsync = getTopArticlesListAsync;\n  }\n\n  public setSources = (sources: Models.ISource[]): void => {\n    sources.forEach(sourceItem => this.sourcesMap.set(sourceItem.id, sourceItem));\n  }\n\n  public getSources = (): Map<string, Models.ISource> => _.cloneDeep(this.sourcesMap);\n\n  public getTopRatedNewsById = async (id: string): Promise<Models.IArticle[]> => {\n    if (this.topArticles.has(id)) {\n      return this.topArticles.get(id);\n    }\n\n    const topArticles = await this.getTopArticlesListAsync(id);\n\n    return this.setTopArticles(topArticles).get(id);\n  }\n\n  public toggleSourceItem(eventTarget: HTMLElement): void {\n    const targetElement = this.getItemElement(eventTarget);\n\n    targetElement && this.toggleItemSelection(targetElement);\n    this.currentSelectedSource && this.toggleItemSelection(this.currentSelectedSource);\n    this.currentSelectedSource = targetElement;\n  }\n\n  private setTopArticles = (news: Models.IArticle[]) => this.topArticles.set(news[0].source.id, news);\n}\n","export const API_KEY = '7719cc235c3c4a4381f84089ece47f5f';\nexport const API_VERSION = 'v2';\nexport const BASE_URL = 'https://newsapi.org';\n","module.exports = __webpack_public_path__ + \"images/b83b2dbc45db82faa926774a67848ab5-default-news.png\";","import { NewsData } from 'NewsData';\nimport { renderList, getSourcesAsync, getArticlesAsync, renderDiffSection } from 'services';\nimport { getItemElement, getElementId } from 'utils';\n\nexport const init = async (): Promise<void> => {\n  const sourceList = document.getElementById('sources-list');\n  const sourceItem = document.getElementById('sources-item');\n  const topRatedSection = document.getElementById('top-rated');\n  const topRatedList = document.getElementById('top-rated-list');\n  const topRatedItem = document.getElementById('top-rated-item');\n\n  const showTopRatedArticlesBlock = (): void => topRatedSection.classList.remove('hidden');\n  const toggleItem = (element: HTMLElement): boolean => element.classList.toggle('selected');\n\n  const newsData = new NewsData(\n    toggleItem,\n    getItemElement,\n    getArticlesAsync,\n  );\n\n  // first getting the source data\n  const sources = await getSourcesAsync();\n  newsData.setSources(sources);\n  renderList(sourceList, sourceItem, newsData.getSources());\n\n  sourceList.addEventListener('click', showTopRatedArticlesBlock, { once: true });\n  sourceList.addEventListener('click', async (event) => {\n    const item = event.target as HTMLElement;\n    newsData.toggleSourceItem(item);\n\n    const articles = await newsData.getTopRatedNewsById(getElementId(item.id));\n    renderList(topRatedList, topRatedItem, articles);\n  });\n\n  // render JSON diff section for webpack task\n  renderDiffSection();\n};\n","import { API_KEY, API_VERSION, BASE_URL } from './constants';\n\n/**\n * Returns NewsAPI response\n * @param endpoint -\n * @param parameters -\n */\nexport const request = async (endpoint: string, parameters = '') => {\n  // const parametersAsString = parameters.join('')\n  const response = await fetch(\n    `${BASE_URL}/${API_VERSION}/${endpoint}?${parameters && `${parameters}&`}apiKey=${API_KEY}`,\n  );\n  const { status, message, ...result } = await response.json();\n\n  // replace with constant\n  if (status === 'error') {\n    // tslint:disable-next-line:no-console\n    console.error(message);\n\n    throw new Error(message);\n  }\n\n  return result;\n};\n","export * from './newsApi';\nexport * from './renderDiffSection';\nexport * from './renderList';\n","import * as Models from 'models';\nimport { request } from 'request';\n\nexport const getSourcesAsync = async (): Promise<Models.ISource[]> => {\n  const { sources } = await request('sources');\n\n  return sources;\n};\n\n/**\n *\n * @param {string} sources\n */\nexport const getArticlesAsync = async (sourceId: string): Promise<Models.IArticle[]> => {\n  const { articles } = await request('top-headlines', `sources=${sourceId}`);\n\n  return articles;\n};\n","import * as data from 'test.json';\n\nexport const renderDiffSection = () => {\n  const { old: sourceData, new: filteredData } = data.default;\n  const diffSection = document.getElementById('json-section');\n  const sourceDataSection = document.getElementById('old-json');\n  const filteredDataSection = document.getElementById('new-json');\n\n  diffSection.classList.remove('hidden');\n  sourceDataSection.innerHTML = JSON.stringify(sourceData, undefined, 2);\n  filteredDataSection.innerHTML = JSON.stringify(filteredData, undefined, 2);\n};\n","import { generateLogoUrl, flattenChildNodes, generateUniqueId } from 'utils';\nimport * as defaultImage from 'images/default-news.png';\n\n/**\n * Renders item's list and replaces the gotten by id list with it\n * @param {HTMLElement} list\n * @param {HTMLElement} item\n * @param {Map<string, Object>} data\n */\nexport const renderList = (list, item: HTMLElement, data) => {\n  const documentFragmentList = document.createDocumentFragment();\n\n  data.forEach((element) => {\n    const newItem = item.cloneNode(true) as HTMLElement;\n    const children = flattenChildNodes(newItem as HTMLElement);\n\n    // TODO: need to create a separate service(s)\n    children.forEach((item: HTMLElement & HTMLImageElement & HTMLAnchorElement) => {\n      switch (item.id) {\n\n        // for source items\n        case 'source-image':\n          item.src = generateLogoUrl(element.url);\n          break;\n        case 'source-caption':\n          item.textContent = element.name;\n          break;\n\n        // for article items\n        case 'top-rated-image':\n          item.src = element.urlToImage ? element.urlToImage : defaultImage;\n          break;\n        case 'article-caption':\n          item.textContent = element.title;\n          break;\n        case 'article-description':\n          item.textContent = element.description;\n          break;\n        case 'article-link':\n          item.href = element.url;\n          break;\n        default: return;\n      }\n\n      // add id postfix only for items with id\n      item.id = item.id && `${item.id}_${element.id || generateUniqueId()}`;\n    });\n\n    newItem.id = `${item.id}_${element.id || generateUniqueId()}`;\n    documentFragmentList.appendChild(newItem);\n  });\n\n  // remove previous added items\n  while (item !== list.lastChild) {\n    list.removeChild(list.lastChild);\n  }\n\n  // append document fragment to list\n  list.appendChild(documentFragmentList);\n};\n","/**\n *\n * @param {HTMLElement} element\n */\nexport const flattenChildNodes = (element: HTMLElement): Element[] => {\n  const children = Array.from(element.children);\n  let result = [...children];\n\n  for (const child of children) {\n    result = result.concat(flattenChildNodes(child as HTMLElement));\n  }\n\n  return result;\n};\n","/**\n * Returns URL for logo icon\n * @param {string} url\n * @param {number} size\n */\nexport const generateLogoUrl = (url: string, size = 70): string =>\n  `https://icon-locator.herokuapp.com/icon?url=${url}&size=${size}`;\n","export const generateUniqueId = () => Math.random().toString(36).substr(2, 16);\n","/**\n * Returns id\n * @param id\n */\nexport const getElementId = (id: string): string => id.split('_')[1];\n","import * as Models from 'models';\n\nexport const getItemElement: Models.GetItemElementFunction = (element) => {\n  if (element.tagName.match(/li/i)) {\n    return element;\n  }\n\n  if (element.tagName.match(/body/i)) {\n    return null;\n  }\n\n  return getItemElement(element.parentElement);\n};\n","export * from './flattenChildNodes';\nexport * from './generateLogoUrl';\nexport * from './generateUniqueId';\nexport * from './getElementId';\nexport * from './getSourceItemElement';\n"],"sourceRoot":""}